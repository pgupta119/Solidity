{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405260016000806101000a81548160ff021916908360ff1602179055506002600060016101000a81548160ff021916908360ff1602179055506003600060026101000a81548160ff021916908360ff16021790555034801561006357600080fd5b50610292806100736000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d28e34a1461005c57806323eed3c5146100665780636ade9da614610070578063ade7621d1461007a578063af7b5baa14610084575b600080fd5b61006461008e565b005b61006e610090565b005b610078610092565b005b6100826100d5565b005b61008c6100d7565b005b565b565b600060019054906101000a900460ff1660008054906101000a900460ff166100ba919061018b565b6000806101000a81548160ff021916908360ff160217905550565b565b600060029054906101000a900460ff16600060019054906101000a900460ff1660008054906101000a900460ff1661010f919061018b565b61011991906101c2565b5060008081819054906101000a900460ff168092919061013890610203565b91906101000a81548160ff021916908360ff160217905550506000600181819054906101000a900460ff168092919061017090610203565b91906101000a81548160ff021916908360ff16021790555050565b6000610196826101f6565b91506101a1836101f6565b92508260ff038211156101b7576101b661022d565b5b828201905092915050565b60006101cd826101f6565b91506101d8836101f6565b9250828210156101eb576101ea61022d565b5b828203905092915050565b600060ff82169050919050565b600061020e826101f6565b915060ff8214156102225761022161022d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206b98a0646d837ac610855fbca7986527e0f275e1a61ebfe7a7c859ecb008a02864736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 DUP1 PUSH2 0x73 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD28E34A EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x23EED3C5 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x6ADE9DA6 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xADE7621D EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xAF7B5BAA EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1C2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x138 SWAP1 PUSH2 0x203 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x170 SWAP1 PUSH2 0x203 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1B7 JUMPI PUSH2 0x1B6 PUSH2 0x22D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x22D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x222 JUMPI PUSH2 0x221 PUSH2 0x22D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x98A0646D837AC610855FBCA7 SWAP9 PUSH6 0x27E0F275E1A6 0x1E 0xBF 0xE7 0xA7 0xC8 MSIZE 0xEC 0xB0 ADDMOD LOG0 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "102:691:0:-:0;;;139:1;129:11;;;;;;;;;;;;;;;;;;;;156:1;146:11;;;;;;;;;;;;;;;;;;;;173:1;163:11;;;;;;;;;;;;;;;;;;;;102:691;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@arithmeticExample_29": {
					"entryPoint": 215,
					"id": 29,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@assignmentExample_40": {
					"entryPoint": 146,
					"id": 40,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@comparsionExample_50": {
					"entryPoint": 144,
					"id": 50,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@conditionalExample_55": {
					"entryPoint": 142,
					"id": 55,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@logicalExample_45": {
					"entryPoint": 213,
					"id": 45,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"checked_add_t_uint8": {
					"entryPoint": 395,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_sub_t_uint8": {
					"entryPoint": 450,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_uint8": {
					"entryPoint": 502,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"increment_t_uint8": {
					"entryPoint": 515,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 557,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:889:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "49:195:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "59:23:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "80:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "64:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "64:18:1"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "59:1:1"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "91:23:1",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "112:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "96:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "96:18:1"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "91:1:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "190:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "192:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "192:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "192:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "173:1:1"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "180:4:1",
																"type": "",
																"value": "0xff"
															},
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "186:1:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "176:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "176:12:1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "170:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "170:19:1"
											},
											"nodeType": "YulIf",
											"src": "167:45:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "222:16:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "233:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "236:1:1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "229:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "229:9:1"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "222:3:1"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "36:1:1",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "39:1:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "45:3:1",
										"type": ""
									}
								],
								"src": "7:237:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "293:142:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "303:23:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "324:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "308:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "308:18:1"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "303:1:1"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "335:23:1",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "356:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "340:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "340:18:1"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "335:1:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "380:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "382:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "382:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "382:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "374:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "377:1:1"
													}
												],
												"functionName": {
													"name": "lt",
													"nodeType": "YulIdentifier",
													"src": "371:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "371:8:1"
											},
											"nodeType": "YulIf",
											"src": "368:34:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "412:17:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "424:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "427:1:1"
													}
												],
												"functionName": {
													"name": "sub",
													"nodeType": "YulIdentifier",
													"src": "420:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "420:9:1"
											},
											"variableNames": [
												{
													"name": "diff",
													"nodeType": "YulIdentifier",
													"src": "412:4:1"
												}
											]
										}
									]
								},
								"name": "checked_sub_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "279:1:1",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "282:1:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "diff",
										"nodeType": "YulTypedName",
										"src": "288:4:1",
										"type": ""
									}
								],
								"src": "250:185:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "484:43:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "494:27:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "509:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "516:4:1",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "505:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "505:16:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "494:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "466:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "476:7:1",
										"type": ""
									}
								],
								"src": "441:86:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "574:126:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "584:31:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "609:5:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "593:15:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "593:22:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "584:5:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "643:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "645:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "645:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "645:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "630:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "637:4:1",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "627:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "627:15:1"
											},
											"nodeType": "YulIf",
											"src": "624:41:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "674:20:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "685:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "692:1:1",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "681:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "681:13:1"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "674:3:1"
												}
											]
										}
									]
								},
								"name": "increment_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "560:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "570:3:1",
										"type": ""
									}
								],
								"src": "533:167:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "734:152:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "751:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "754:77:1",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "744:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "744:88:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "744:88:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "848:1:1",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "851:4:1",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "841:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "841:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "841:15:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "872:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "875:4:1",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "865:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "865:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "865:15:1"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "706:180:1"
							}
						]
					},
					"contents": "{\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function increment_t_uint8(value) -> ret {\n        value := cleanup_t_uint8(value)\n        if eq(value, 0xff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630d28e34a1461005c57806323eed3c5146100665780636ade9da614610070578063ade7621d1461007a578063af7b5baa14610084575b600080fd5b61006461008e565b005b61006e610090565b005b610078610092565b005b6100826100d5565b005b61008c6100d7565b005b565b565b600060019054906101000a900460ff1660008054906101000a900460ff166100ba919061018b565b6000806101000a81548160ff021916908360ff160217905550565b565b600060029054906101000a900460ff16600060019054906101000a900460ff1660008054906101000a900460ff1661010f919061018b565b61011991906101c2565b5060008081819054906101000a900460ff168092919061013890610203565b91906101000a81548160ff021916908360ff160217905550506000600181819054906101000a900460ff168092919061017090610203565b91906101000a81548160ff021916908360ff16021790555050565b6000610196826101f6565b91506101a1836101f6565b92508260ff038211156101b7576101b661022d565b5b828201905092915050565b60006101cd826101f6565b91506101d8836101f6565b9250828210156101eb576101ea61022d565b5b828203905092915050565b600060ff82169050919050565b600061020e826101f6565b915060ff8214156102225761022161022d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206b98a0646d837ac610855fbca7986527e0f275e1a61ebfe7a7c859ecb008a02864736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD28E34A EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x23EED3C5 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x6ADE9DA6 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xADE7621D EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xAF7B5BAA EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0xD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1C2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x138 SWAP1 PUSH2 0x203 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x1 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x170 SWAP1 PUSH2 0x203 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196 DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0x1B7 JUMPI PUSH2 0x1B6 PUSH2 0x22D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8 DUP4 PUSH2 0x1F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1EA PUSH2 0x22D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E DUP3 PUSH2 0x1F6 JUMP JUMPDEST SWAP2 POP PUSH1 0xFF DUP3 EQ ISZERO PUSH2 0x222 JUMPI PUSH2 0x221 PUSH2 0x22D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x98A0646D837AC610855FBCA7 SWAP9 PUSH6 0x27E0F275E1A6 0x1E 0xBF 0xE7 0xA7 0xC8 MSIZE 0xEC 0xB0 ADDMOD LOG0 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "102:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;744:46;;;:::i;:::-;;643:45;;;:::i;:::-;;409:64;;;:::i;:::-;;529:51;;;:::i;:::-;;257:88;;;:::i;:::-;;744:46;:::o;643:45::-;:::o;409:64::-;463:1;;;;;;;;;;;459;;;;;;;;;;:5;;;;:::i;:::-;455:1;;:9;;;;;;;;;;;;;;;;;;409:64::o;529:51::-;:::o;257:88::-;311:1;;;;;;;;;;;307;;;;;;;;;;;303;;;;;;;;;;:5;;;;:::i;:::-;:9;;;;:::i;:::-;;322:1;;:3;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;335:1;;:3;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;257:88::o;7:237:1:-;45:3;64:18;80:1;64:18;:::i;:::-;59:23;;96:18;112:1;96:18;:::i;:::-;91:23;;186:1;180:4;176:12;173:1;170:19;167:45;;;192:18;;:::i;:::-;167:45;236:1;233;229:9;222:16;;7:237;;;;:::o;250:185::-;288:4;308:18;324:1;308:18;:::i;:::-;303:23;;340:18;356:1;340:18;:::i;:::-;335:23;;377:1;374;371:8;368:34;;;382:18;;:::i;:::-;368:34;427:1;424;420:9;412:17;;250:185;;;;:::o;441:86::-;476:7;516:4;509:5;505:16;494:27;;441:86;;;:::o;533:167::-;570:3;593:22;609:5;593:22;:::i;:::-;584:31;;637:4;630:5;627:15;624:41;;;645:18;;:::i;:::-;624:41;692:1;685:5;681:13;674:20;;533:167;;;:::o;706:180::-;754:77;751:1;744:88;851:4;848:1;841:15;875:4;872:1;865:15"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "131600",
				"executionCost": "73078",
				"totalCost": "204678"
			},
			"external": {
				"arithmeticExample()": "infinite",
				"assignmentExample()": "infinite",
				"comparsionExample()": "144",
				"conditionalExample()": "122",
				"logicalExample()": "188"
			}
		},
		"methodIdentifiers": {
			"arithmeticExample()": "af7b5baa",
			"assignmentExample()": "6ade9da6",
			"comparsionExample()": "23eed3c5",
			"conditionalExample()": "0d28e34a",
			"logicalExample()": "ade7621d"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "arithmeticExample",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "assignmentExample",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "comparsionExample",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "conditionalExample",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "logicalExample",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}